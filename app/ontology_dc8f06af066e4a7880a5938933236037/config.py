from dataclasses import dataclass, field
from typing import Any, Dict, Optional, List

from marshmallow import Schema, fields, post_load

from openfabric_pysdk.utility import SchemaUtil
from mock_openfabric import Resource


################################################################
# Config concept class - AUTOGENERATED
################################################################
@dataclass
class ConfigClass:
    """Config class for the application"""
    app_ids: Resource = field(default_factory=lambda: Resource([]))


################################################################
# ConfigSchema concept class - AUTOGENERATED
################################################################
class ConfigClassSchema(Schema):
    app_ids = fields.List(fields.String())

    @post_load
    def create(self, data, **kwargs):
        return SchemaUtil.create(ConfigClass(), data)
